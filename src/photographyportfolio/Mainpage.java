/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package photographyportfolio;

import com.sun.jdi.connect.spi.Connection;
import java.awt.Color;
import java.awt.Image;
import java.beans.Statement;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.List;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import java.util.Collections;
import javax.imageio.ImageIO;

/**
 *
 * @author dell
 */
public class Mainpage extends javax.swing.JFrame {
    
    private List<byte[]> imageBytesList = new ArrayList<>();
    private List<String> nameList = new ArrayList<>();
    private JLabel[] imageLabels = new JLabel[5];
    private JLabel[] nameLabels = new JLabel[5];
    
    //this is fetching username
    private List<String> usernameList = new ArrayList<>();
    private List<Integer> ratingList = new ArrayList<>();
    private List<Integer> ratingList2 = new ArrayList<>();
    private List<Integer> ratingList3 = new ArrayList<>();
    private List<Integer> ratingList4 = new ArrayList<>();
    private List<Integer> ratingList5 = new ArrayList<>();
   
    
    /*
    *
     * Creates new form Mainpage
     */
    public Mainpage() throws SQLException, IOException {
        initComponents();
        
        
        imageLabels[0] = img1;
        imageLabels[1] = img2;
        imageLabels[2] = img3;
        imageLabels[3] = img4;
        imageLabels[4] = img5;
        nameLabels[0] = name1;
        nameLabels[1] = name2;
        nameLabels[2] = name3;
        nameLabels[3] = name4;
        nameLabels[4] = name5;
        
         
         
        fetchImageDataFromDatabase();
        updateLabelsBasedOnData();
        fetchnameDataFromDatabase();
        updatenameLabelsBasedOnData();
        fetchusernameDataFromDatabase();
       
       int size = usernameList.size();
       
       if(size==0){
       
       }
       else if(size==1){
       fetchuser1RatingFromDatabase();
       }
       else if(size==1){
        fetchuser1RatingFromDatabase();
        
       }
       else if(size==2){
        fetchuser1RatingFromDatabase();
        fetchuser2RatingFromDatabase();
      
       }
       else if(size==3){
        fetchuser1RatingFromDatabase();
        fetchuser2RatingFromDatabase();
       fetchuser3RatingFromDatabase();
       
       }
       else if(size==4){
        fetchuser1RatingFromDatabase();
        fetchuser2RatingFromDatabase();
       fetchuser3RatingFromDatabase();
       fetchuser4RatingFromDatabase();
       }
       
       
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        img1 = new javax.swing.JLabel();
        img2 = new javax.swing.JLabel();
        img3 = new javax.swing.JLabel();
        img4 = new javax.swing.JLabel();
        img5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        name1 = new javax.swing.JLabel();
        name2 = new javax.swing.JLabel();
        name3 = new javax.swing.JLabel();
        name4 = new javax.swing.JLabel();
        name5 = new javax.swing.JLabel();
        starr1 = new javax.swing.JLabel();
        stara1 = new javax.swing.JLabel();
        starb1 = new javax.swing.JLabel();
        starc1 = new javax.swing.JLabel();
        stard1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        rate1 = new javax.swing.JLabel();
        username1 = new javax.swing.JLabel();
        username2 = new javax.swing.JLabel();
        username3 = new javax.swing.JLabel();
        username4 = new javax.swing.JLabel();
        username5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        clientusername = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(700, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        img1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                img1MouseClicked(evt);
            }
        });
        getContentPane().add(img1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 110, 110));

        img2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                img2MouseClicked(evt);
            }
        });
        getContentPane().add(img2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 110, 120));

        img3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                img3MouseClicked(evt);
            }
        });
        getContentPane().add(img3, new org.netbeans.lib.awtextra.AbsoluteConstraints(348, 176, 110, 110));

        img4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                img4MouseClicked(evt);
            }
        });
        getContentPane().add(img4, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 170, 120, 120));

        img5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                img5MouseClicked(evt);
            }
        });
        getContentPane().add(img5, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 150, 120, 120));

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Admin");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 20, 120, 30));

        jButton2.setBackground(new java.awt.Color(0, 204, 204));
        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("JOIN WITH US START YOUR JOURNEY");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 970, 360, -1));

        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton9.setBackground(new java.awt.Color(0, 255, 255));
        jButton9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton9.setText("ALL");
        jPanel7.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, -1, 60));

        jButton10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton10.setText("WILDLIFE");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 0, -1, 60));

        jButton11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton11.setText("WEDDING");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 0, -1, 60));

        jButton12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton12.setText("SOCIAL EVENTS");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 0, -1, 60));

        jButton13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton13.setText("SPORTS");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 0, -1, 60));

        getContentPane().add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 800, 70));
        getContentPane().add(name1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, -1, -1));
        getContentPane().add(name2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 290, -1, -1));
        getContentPane().add(name3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 290, -1, -1));
        getContentPane().add(name4, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 290, -1, -1));
        getContentPane().add(name5, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 310, -1, -1));
        getContentPane().add(starr1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 320, 100, 30));
        getContentPane().add(stara1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 320, 90, 20));
        getContentPane().add(starb1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 320, 90, 20));
        getContentPane().add(starc1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 320, 100, 20));
        getContentPane().add(stard1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 330, 100, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photographyportfolio/main page bg.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 1060));

        rate1.setText("4");
        getContentPane().add(rate1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 250, 30, -1));

        username1.setText("jLabel2");
        getContentPane().add(username1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, -1, -1));

        username2.setText("jLabel3");
        getContentPane().add(username2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, -1, -1));

        username3.setText("jLabel4");
        getContentPane().add(username3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 240, -1, -1));

        username4.setText("jLabel5");
        getContentPane().add(username4, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 230, -1, -1));

        username5.setText("jLabel4");
        getContentPane().add(username5, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 200, -1, -1));

        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 320, 20, 20));

        jLabel3.setText("jLabel2");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 320, 20, 20));

        clientusername.setText("jLabel4");
        getContentPane().add(clientusername, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 20, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateLabelsBasedOnData() {
        int numLabels = imageBytesList.size();
        
        for (int i = 0; i < numLabels && i < imageLabels.length; i++) {
            byte[] imageBytes = imageBytesList.get(i);
            ImageIcon imageIcon = new ImageIcon(imageBytes);
            int labelWidth = imageLabels[i].getWidth();
            int labelHeight = imageLabels[i].getHeight();
            Image image = imageIcon.getImage();
            Image scaledImage = image.getScaledInstance(labelWidth, labelHeight, Image.SCALE_SMOOTH);
            ImageIcon scaledIcon = new ImageIcon(scaledImage);
            imageLabels[i].setIcon(scaledIcon);
        }
       
       
    }
     
     private void updatenameLabelsBasedOnData(){
     int unameLabels = nameList.size();
        
      for (int i = 0; i < unameLabels && i < nameLabels.length; i++) {
            String textData = nameList.get(i);
            nameLabels[i].setText(textData);
        }

     }
    
     private void fetchImageDataFromDatabase() throws java.sql.SQLException {
         java.sql.Connection conn = java.sql.DriverManager.getConnection("jdbc:mysql://localhost:3306/portfolio", "root", "root");
         java.sql.Statement stm = conn.createStatement();
        
         java.sql.ResultSet resultSet = stm.executeQuery("SELECT image FROM images ORDER BY username");
         while (resultSet.next()) {
             byte[] imageBytes = resultSet.getBytes("image");
             imageBytesList.add(imageBytes);
         }
    }
    
     private void fetchnameDataFromDatabase() throws java.sql.SQLException {
         java.sql.Connection conn = java.sql.DriverManager.getConnection("jdbc:mysql://localhost:3306/portfolio", "root", "root");
         java.sql.Statement stm = conn.createStatement();
         // Create a table named 'images' with a column 'image_data' in your SQLite database
         // The table should have rows with image data
         // Execute a query to retrieve image data from the 'images' table
         java.sql.ResultSet resultSet = stm.executeQuery("SELECT fname FROM images");
         while (resultSet.next()) {
            String username = resultSet.getString("fname");
             nameList.add(username);
                Collections.sort(nameList);
         }
    }
     
     private void fetchusernameDataFromDatabase() throws java.sql.SQLException {
         java.sql.Connection conn = java.sql.DriverManager.getConnection("jdbc:mysql://localhost:3306/portfolio", "root", "root");
         java.sql.Statement stm = conn.createStatement();
         // Create a table named 'images' with a column 'image_data' in your SQLite database
         // The table should have rows with image data
         // Execute a query to retrieve image data from the 'images' table
         java.sql.ResultSet resultSet = stm.executeQuery("SELECT username FROM images");
         while (resultSet.next()) {
            String username = resultSet.getString("username");
             usernameList.add(username);
             System.out.print(usernameList);
         }
    }
     private void fetchuser1RatingFromDatabase() throws java.sql.SQLException, IOException {
         java.sql.Connection conn = java.sql.DriverManager.getConnection("jdbc:mysql://localhost:3306/portfolio", "root", "root");
         java.sql.Statement stm = conn.createStatement();
         
         String usernameforRating =usernameList.get(0);
         
         java.sql.ResultSet resultSet = stm.executeQuery("SELECT star_rating FROM reviews WHERE username = '" + usernameforRating + "'");
         while (resultSet.next()) {
             int rate = resultSet.getInt("star_rating");
             ratingList.add(rate);
         }
     
         int average = calculateAverage(ratingList);
         System.out.print(average);
         // Define the path to the image you want to display
    String nostar = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\nostar.png";
    String star1 = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\star.png";
    String star2 = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\star2.png";
    String star3 = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\star3.png";
    String star4 = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\star4.png";
    String star5 = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\star5.png";
    
    
        if (average == 0) {
        Image image = ImageIO.read(new File(nostar));
//        image = image.getScaledInstance(starr1.getWidth(), starr1.getHeight(), Image.SCALE_SMOOTH);
        starr1.setIcon(new ImageIcon(image));
        
        }
        else if (average == 1) {
        Image image = ImageIO.read(new File(star1));
//        image = image.getScaledInstance(starr1.getWidth(), starr1.getHeight(), Image.SCALE_SMOOTH);
        starr1.setIcon(new ImageIcon(image));
        
        } else if (average == 2) {

        Image image = ImageIO.read(new File(star2));

        starr1.setIcon(new ImageIcon(image));
        } else if (average == 3) {

        Image image = ImageIO.read(new File(star3));

        starr1.setIcon(new ImageIcon(image));
        } else if (average == 4) {
        Image image = ImageIO.read(new File(star4));
//       
        starr1.setIcon(new ImageIcon(image));
//        
        
            }
        else if (average == 5){
        Image image = ImageIO.read(new File(star5));
//        image = image.getScaledInstance(starr1.getWidth(), starr1.getHeight(), Image.SCALE_SMOOTH);
        starr1.setIcon(new ImageIcon(image));
        }
     
     
    }
     public static int calculateAverage(List<Integer> ratingList) {
        if (ratingList.isEmpty()) {
            return 0; // Handle the case when the list is empty.
        }

        int sum = 0;
        for (int number : ratingList) {
            sum += number;
        }

        return sum / ratingList.size(); // The result is an integer.
    }
     
    private void fetchuser2RatingFromDatabase() throws java.sql.SQLException, IOException {
         java.sql.Connection conn = java.sql.DriverManager.getConnection("jdbc:mysql://localhost:3306/portfolio", "root", "root");
         java.sql.Statement stm = conn.createStatement();
         
         String usernameforRating =usernameList.get(1);
         
         java.sql.ResultSet resultSet = stm.executeQuery("SELECT star_rating FROM reviews WHERE username = '" + usernameforRating + "'");
         while (resultSet.next()) {
             int rate = resultSet.getInt("star_rating");
             ratingList2.add(rate);
            }
         
         int average = calculateAverage2(ratingList2);
         System.out.print(average);
         // Define the path to the image you want to display
    String nostar = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\nostar.png";
    String star1 = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\star.png";
    String star2 = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\star2.png";
    String star3 = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\star3.png";
    String star4 = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\star4.png";
    String star5 = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\star5.png";
    if (average == 0) {
        Image image = ImageIO.read(new File(nostar));
//        image = image.getScaledInstance(starr1.getWidth(), starr1.getHeight(), Image.SCALE_SMOOTH);
        stara1.setIcon(new ImageIcon(image));
        
        }    
    else if (average == 1) {
        Image image = ImageIO.read(new File(star1));
//        image = image.getScaledInstance(starr1.getWidth(), starr1.getHeight(), Image.SCALE_SMOOTH);
        stara1.setIcon(new ImageIcon(image));
        
        } else if (average == 2) {

        Image image = ImageIO.read(new File(star2));

        stara1.setIcon(new ImageIcon(image));
        } else if (average == 3) {

        Image image = ImageIO.read(new File(star3));

        stara1.setIcon(new ImageIcon(image));
        } else if (average == 4) {
        Image image = ImageIO.read(new File(star4));
//       
        stara1.setIcon(new ImageIcon(image));
//        
        
            }
        else if (average == 5){
        Image image = ImageIO.read(new File(star5));
//        image = image.getScaledInstance(starr1.getWidth(), starr1.getHeight(), Image.SCALE_SMOOTH);
        stara1.setIcon(new ImageIcon(image));
        }
    }
    public static int calculateAverage2(List<Integer> ratingList2) {
        if (ratingList2.isEmpty()) {
            return 0; // Handle the case when the list is empty.
        }

        int sum = 0;
        for (int number : ratingList2) {
            sum += number;
        }

        return sum / ratingList2.size(); // The result is an integer.
    }
    
    private void fetchuser3RatingFromDatabase() throws java.sql.SQLException, IOException {
         java.sql.Connection conn = java.sql.DriverManager.getConnection("jdbc:mysql://localhost:3306/portfolio", "root", "root");
         java.sql.Statement stm = conn.createStatement();
         
         String usernameforRating =usernameList.get(2);
         
         java.sql.ResultSet resultSet = stm.executeQuery("SELECT star_rating FROM reviews WHERE username = '" + usernameforRating + "'");
         while (resultSet.next()) {
             int rate = resultSet.getInt("star_rating");
             ratingList3.add(rate);
         }
         
         int average = calculateAverage3(ratingList3);
         System.out.print(average);
    String nostar = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\nostar.png";
    String star1 = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\star.png";
    String star2 = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\star2.png";
    String star3 = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\star3.png";
    String star4 = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\star4.png";
    String star5 = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\star5.png";
    if (average == 0) {
        Image image = ImageIO.read(new File(nostar));
//        image = image.getScaledInstance(starr1.getWidth(), starr1.getHeight(), Image.SCALE_SMOOTH);
        starb1.setIcon(new ImageIcon(image));
        
        }   
        else if (average == 1) {
        Image image = ImageIO.read(new File(star1));
//        image = image.getScaledInstance(starr1.getWidth(), starr1.getHeight(), Image.SCALE_SMOOTH);
        starb1.setIcon(new ImageIcon(image));
        
        } else if (average == 2) {

        Image image = ImageIO.read(new File(star2));

        starb1.setIcon(new ImageIcon(image));
        } else if (average == 3) {

        Image image = ImageIO.read(new File(star3));

        starb1.setIcon(new ImageIcon(image));
        } else if (average == 4) {
        Image image = ImageIO.read(new File(star4));
//       
        starb1.setIcon(new ImageIcon(image));
//        
        
            }
        else if (average == 5){
        Image image = ImageIO.read(new File(star5));
//        image = image.getScaledInstance(starr1.getWidth(), starr1.getHeight(), Image.SCALE_SMOOTH);
        starb1.setIcon(new ImageIcon(image));
        }
    }
    public static int calculateAverage3(List<Integer> ratingList3) {
        if (ratingList3.isEmpty()) {
            return 0; // Handle the case when the list is empty.
        }

        int sum = 0;
        for (int number : ratingList3) {
            sum += number;
        }

        return sum / ratingList3.size(); // The result is an integer.
    }
    private void fetchuser4RatingFromDatabase() throws java.sql.SQLException, IOException {
         java.sql.Connection conn = java.sql.DriverManager.getConnection("jdbc:mysql://localhost:3306/portfolio", "root", "root");
         java.sql.Statement stm = conn.createStatement();
         
         String usernameforRating =usernameList.get(3);
         
         java.sql.ResultSet resultSet = stm.executeQuery("SELECT star_rating FROM reviews WHERE username = '" + usernameforRating + "'");
         while (resultSet.next()) {
             int rate = resultSet.getInt("star_rating");
             ratingList4.add(rate);
         }
         
         int average = calculateAverage4(ratingList4);
         System.out.print(average);
         // Define the path to the image you want to display
    String nostar = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\nostar.png";
    String star1 = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\star.png";
    String star2 = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\star2.png";
    String star3 = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\star3.png";
    String star4 = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\star4.png";
    String star5 = "C:\\\\Users\\\\User\\\\Desktop\\\\Soham mini\\\\Photographyportfolio\\\\src\\\\photographyportfolio\\\\star5.png";
    
    if (average == 0) {
        Image image = ImageIO.read(new File(nostar));
//        image = image.getScaledInstance(starr1.getWidth(), starr1.getHeight(), Image.SCALE_SMOOTH);
        starc1.setIcon(new ImageIcon(image));
        
        }   
    else if (average == 1) {
        Image image = ImageIO.read(new File(star1));
//        image = image.getScaledInstance(starr1.getWidth(), starr1.getHeight(), Image.SCALE_SMOOTH);
        starc1.setIcon(new ImageIcon(image));
        
        } else if (average == 2) {

        Image image = ImageIO.read(new File(star2));

        starc1.setIcon(new ImageIcon(image));
        } else if (average == 3) {

        Image image = ImageIO.read(new File(star3));

        starc1.setIcon(new ImageIcon(image));
        } else if (average == 4) {
        Image image = ImageIO.read(new File(star4));
//       
        starc1.setIcon(new ImageIcon(image));
//        
        
            }
        else if (average == 5){
        Image image = ImageIO.read(new File(star5));
//        image = image.getScaledInstance(starr1.getWidth(), starr1.getHeight(), Image.SCALE_SMOOTH);
        starc1.setIcon(new ImageIcon(image));
        }
    }
    public static int calculateAverage4(List<Integer> ratingList4) {
        if (ratingList4.isEmpty()) {
            return 0; // Handle the case when the list is empty.
        }

        int sum = 0;
        for (int number : ratingList4) {
            sum += number;
        }

        return sum / ratingList4.size(); // The result is an integer.
    }
     
    
     
    
    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        sports sportsFrame = null;
        try {
            sportsFrame = new sports();
        } catch (SQLException ex) {
            Logger.getLogger(Mainpage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Mainpage.class.getName()).log(Level.SEVERE, null, ex);
        }
        sportsFrame.setVisible(true);
        sportsFrame.pack();
        sportsFrame.setLocationRelativeTo(sportsFrame);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
             // TODO add your handling code here:
             wildlife wildlifeFrame = null;
        try {
            wildlifeFrame = new wildlife();
        } catch (SQLException ex) {
            Logger.getLogger(Mainpage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Mainpage.class.getName()).log(Level.SEVERE, null, ex);
        }
        wildlifeFrame.setVisible(true);
        wildlifeFrame.pack();
        wildlifeFrame.setLocationRelativeTo(wildlifeFrame);
        this.dispose(); 
             
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
Registartion  RegistartionFrame = new  Registartion();
        RegistartionFrame.setVisible(true);
        RegistartionFrame.pack();
        RegistartionFrame.setLocationRelativeTo(RegistartionFrame);
        this.dispose();           // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        adminlo adminloFrame = new adminlo();
        adminloFrame.setVisible(true);
        adminloFrame.pack();
        adminloFrame.setLocationRelativeTo(adminloFrame);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        
     
        wedding weddingFrame = null;
        try {
            weddingFrame = new wedding();
        } catch (SQLException ex) {
            Logger.getLogger(Mainpage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Mainpage.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        weddingFrame.setVisible(true);
        weddingFrame.pack();
        weddingFrame.setLocationRelativeTo(weddingFrame);
        this.dispose();        // TODO add your handling code here:
           
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
social socialFrame = null;
        try {
            socialFrame = new social();
        } catch (SQLException ex) {
            Logger.getLogger(Mainpage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Mainpage.class.getName()).log(Level.SEVERE, null, ex);
        }
        socialFrame.setVisible(true);
        socialFrame.pack();
        socialFrame.setLocationRelativeTo(socialFrame);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed

    private void img1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img1MouseClicked
        // TODO add your handling code here:
        String usernamefor = usernameList.get(0);
        userinfo userinfopage = new userinfo(usernamefor);
       userinfopage.usernamelabel.setText(usernameList.get(0));
        
        System.out.println(usernameList.get(0));
        
        userinfopage.setVisible(true);
        userinfopage.pack();
        userinfopage.setLocationRelativeTo(userinfopage); 
        
    }//GEN-LAST:event_img1MouseClicked

    private void img4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img4MouseClicked
        // TODO add your handling code here:
        String usernamefor = usernameList.get(3);
        userinfo userinfopage = new userinfo(usernamefor);
        userinfopage.usernamelabel.setText(usernameList.get(3));
        userinfopage.setVisible(true);
        userinfopage.pack();
        userinfopage.setLocationRelativeTo(userinfopage); 
    }//GEN-LAST:event_img4MouseClicked

    private void img2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img2MouseClicked
        // TODO add your handling code here:
        String usernamefor = usernameList.get(1);
        userinfo userinfopage = new userinfo(usernamefor);
        
        userinfopage.setVisible(true);
        userinfopage.pack();
        userinfopage.setLocationRelativeTo(userinfopage); 
        userinfopage.usernamelabel.setText(usernameList.get(1));
    }//GEN-LAST:event_img2MouseClicked

    private void img3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img3MouseClicked
        // TODO add your handling code here:
        String usernamefor = usernameList.get(2);
        userinfo userinfopage = new userinfo(usernamefor);
        userinfopage.usernamelabel.setText(usernameList.get(2));
        
        userinfopage.setVisible(true);
        userinfopage.pack();
        userinfopage.setLocationRelativeTo(userinfopage); 
    }//GEN-LAST:event_img3MouseClicked

    private void img5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img5MouseClicked
        // TODO add your handling code here:
         String usernamefor = usernameList.get(4);
        userinfo userinfopage = new userinfo(usernamefor);
        userinfopage.usernamelabel.setText(usernameList.get(2));
        
        userinfopage.setVisible(true);
        userinfopage.pack();
        userinfopage.setLocationRelativeTo(userinfopage); 
    }//GEN-LAST:event_img5MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mainpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mainpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mainpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mainpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new Mainpage().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(Mainpage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Mainpage.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel clientusername;
    private javax.swing.JLabel img1;
    private javax.swing.JLabel img2;
    private javax.swing.JLabel img3;
    private javax.swing.JLabel img4;
    private javax.swing.JLabel img5;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JLabel name1;
    private javax.swing.JLabel name2;
    private javax.swing.JLabel name3;
    private javax.swing.JLabel name4;
    private javax.swing.JLabel name5;
    private javax.swing.JLabel rate1;
    private javax.swing.JLabel stara1;
    private javax.swing.JLabel starb1;
    private javax.swing.JLabel starc1;
    private javax.swing.JLabel stard1;
    private javax.swing.JLabel starr1;
    private javax.swing.JLabel username1;
    private javax.swing.JLabel username2;
    private javax.swing.JLabel username3;
    private javax.swing.JLabel username4;
    private javax.swing.JLabel username5;
    // End of variables declaration//GEN-END:variables

    private String parseString(int average) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    
}
