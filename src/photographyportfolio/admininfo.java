/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package photographyportfolio;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author dell
 */
public class admininfo extends javax.swing.JFrame {

    String fname=null;
    byte[] pinsertimage=null;
    PreparedStatement pst=null;
    /**
     * Creates new form admininfo
     */
    public admininfo() throws SQLException {
        initComponents();
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        category = new javax.swing.JComboBox<>();
        pimg = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        button1 = new java.awt.Button();
        button2 = new java.awt.Button();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        update = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        clientusername = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Choose the category");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 120, -1, -1));

        category.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        category.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "wildlife", "wedding", "social_events", "sports", "pre_wedding" }));
        category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryActionPerformed(evt);
            }
        });
        getContentPane().add(category, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 120, -1, -1));

        pimg.setText("Upload your Pic");
        getContentPane().add(pimg, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 140, 100));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Ayush");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 30, 60, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Add your Details");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, -1, -1));

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 730, 250));

        button1.setBackground(new java.awt.Color(255, 102, 102));
        button1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        button1.setLabel("Privious");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });
        getContentPane().add(button1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 550, 90, 30));

        button2.setBackground(new java.awt.Color(204, 255, 153));
        button2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button2.setLabel("Save & Next");
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });
        getContentPane().add(button2, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 550, 90, 30));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("UPLOAD PIC");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 90, 90));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 110, 110));

        jTextField1.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter your name"));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 300, -1));

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        getContentPane().add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 560, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photographyportfolio/photoport (1).png"))); // NOI18N
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, -1));

        clientusername.setText("jLabel4");
        getContentPane().add(clientusername, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 20, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public void displayMessagesForUser() throws java.sql.SQLException {
        String username = jLabel2.getText();
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/portfolio", "root", "root"); // Handle the exception appropriately.
        String selectMessagesSql = "SELECT * FROM messages WHERE username = ? AND is_read = 0"; // Fetch unread messages
        PreparedStatement selectMessagesStatement = conn.prepareStatement(selectMessagesSql);
        selectMessagesStatement.setString(1, username);
        System.out.print(selectMessagesStatement);
        java.sql.ResultSet rs = selectMessagesStatement.executeQuery();
        while (rs.next()) {
            // Read message details from the result set
            String sender = rs.getString("username");
            String messageContent = rs.getString("message");
            String timestamp = rs.getString("time");

            // Display the message to the user in your GUI
            // You can use JOptionPane or any other UI component to show the message
            String message = "From: " + "Admin" + "\nDate: " + timestamp + "\nMessage: " + messageContent;
            JOptionPane.showMessageDialog(this, message);

            // Mark the message as read (update the 'is_read' column in the database)
            String messageID = rs.getString("username");
            String markAsReadSql = "UPDATE messages SET is_read = 1 WHERE username = ?";
            PreparedStatement markAsReadStatement = conn.prepareStatement(markAsReadSql);
            markAsReadStatement.setString(1, messageID);
            markAsReadStatement.executeUpdate();
        }
}

    
    
    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        String username = jLabel2.getText(); // Assuming username is coming from jTextField1
        String pname = jTextField1.getText(); // Assuming pname is coming from jTextField2
        String pcate = jTextArea1.getText(); // Assuming pcate is coming from jTextArea1
        String categry = (String) category.getSelectedItem();
       
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/portfolio", "root", "root");
            String checkQuery ="Select * from images where username=?";
            PreparedStatement pstcheck = conn.prepareStatement(checkQuery);
            pstcheck.setString(1,username);
            java.sql.ResultSet rs = pstcheck.executeQuery();
            if(!rs.next()){
                if(!username.isEmpty() && !pname.isEmpty() && !pcate.isEmpty() ){
            String query = "INSERT INTO images (username, fname, details, image,category) VALUES (?, ?, ?, ?, ?)";
            pst = conn.prepareStatement(query);
            pst.setString(1, username);
            pst.setString(2, pname);
            pst.setString(3, pcate);
            pst.setBytes(4, pinsertimage);
            pst.setString(5,categry );
            pst.executeUpdate();
            conn.close();
            JOptionPane.showMessageDialog(this, "Update successful");
            adminphoto adminphotoFrame = new adminphoto();
        adminphotoFrame.setVisible(true);
        adminphotoFrame.pack();
        adminphotoFrame.setLocationRelativeTo(adminphotoFrame);
        adminphotoFrame.usern.setText(username);
        this.dispose();  
            }else{
                     JOptionPane.showMessageDialog(this, "Your entry field is Empty");
                }
            }
        
            else{
            JOptionPane.showMessageDialog(this, "Username exists redirecting to next page");
            adminphoto adminphotoFrame = new adminphoto();
        adminphotoFrame.setVisible(true);
        adminphotoFrame.pack();
        adminphotoFrame.setLocationRelativeTo(adminphotoFrame);
        adminphotoFrame.usern.setText(username);
        this.dispose();  
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
        
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_button2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fchoser = new JFileChooser();
        fchoser.showOpenDialog(null);
        File f = fchoser.getSelectedFile();
        fname = f.getAbsolutePath();
        ImageIcon micon = new ImageIcon(fname);
        try {
            File image = new File(fname);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];
            int readnum;
            while ((readnum = fis.read(buf)) != -1) {
                baos.write(buf, 0, readnum);
            }
            pinsertimage = baos.toByteArray();
            pimg.setIcon(new ImageIcon(fname)); // Set the image on the label
        } catch (Exception e) {
            e.printStackTrace();
        }    
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        // TODO add your handling code here:
        Login LoginFrame = new Login();
        LoginFrame.setVisible(true);
        LoginFrame.pack();
        LoginFrame.setLocationRelativeTo(LoginFrame);
    }//GEN-LAST:event_button1ActionPerformed

    private void categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        String username = jLabel2.getText(); // Assuming username is coming from jLabel2
    String pname = jTextField1.getText(); // Assuming pname is coming from jTextField1
    String pcate = jTextArea1.getText(); // Assuming pcate is coming from jTextArea1

    if (!username.isEmpty() && !pname.isEmpty() && !pcate.isEmpty()) {
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/portfolio", "root", "root");
            String updateQuery = "UPDATE images SET fname = ?, details = ? WHERE username = ?";
            PreparedStatement pstUpdate = conn.prepareStatement(updateQuery);
            pstUpdate.setString(1, pname);
            pstUpdate.setString(2, pcate);
            pstUpdate.setString(3, username);
            int rowsUpdated = pstUpdate.executeUpdate();
            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Update successful");
            } else {
                JOptionPane.showMessageDialog(this, "Update failed. User not found.");
            }
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(this, "One or more fields are empty. Please fill in all fields.");
    }
    }//GEN-LAST:event_updateActionPerformed

    
                                        
    


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admininfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admininfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admininfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admininfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new admininfo().setVisible(true);
                    
                } catch (SQLException ex) {
                    Logger.getLogger(admininfo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button button1;
    private java.awt.Button button2;
    private javax.swing.JComboBox<String> category;
    public javax.swing.JLabel clientusername;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel pimg;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

    private void displayMessageForuser() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
