/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package photographyportfolio;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author dell
 */
public class adminphoto extends javax.swing.JFrame {
    
    PreparedStatement pst=null;
    byte[] pinsertimage=null;
    byte[] pinsertimage1 = null;
    byte[] pinsertimage2 = null;
    byte[] pinsertimage3 = null;
    byte[] pinsertimage4 = null;
    byte[] pinsertimage5 = null;
    /**
     * Creates new form adminphoto
     */
    public adminphoto() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        img1 = new javax.swing.JLabel();
        img2 = new javax.swing.JLabel();
        img3 = new javax.swing.JLabel();
        img5 = new javax.swing.JLabel();
        img4 = new javax.swing.JLabel();
        img6 = new javax.swing.JLabel();
        button1 = new java.awt.Button();
        button2 = new java.awt.Button();
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        update = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        usern = new javax.swing.JLabel();
        clientusername = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        img1.setText("Add photo");
        img1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(img1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 150, 140));

        img2.setText("Add Photo");
        img2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(img2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 170, 150, 140));

        img3.setText("Add photo");
        img3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(img3, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 170, 150, 140));

        img5.setText("Add photo");
        img5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(img5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 370, 150, 140));

        img4.setText("Add photo");
        img4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(img4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 370, 150, 140));

        img6.setText("Add photo");
        img6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(img6, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 370, 150, 140));

        button1.setBackground(new java.awt.Color(255, 102, 102));
        button1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        button1.setLabel("Privious");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });
        getContentPane().add(button1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 560, -1, -1));

        button2.setBackground(new java.awt.Color(204, 255, 102));
        button2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button2.setLabel("Save & Next");
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });
        getContentPane().add(button2, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 560, -1, -1));

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("HOME");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 20, 70, 40));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel10.setText("ADD YOUR ART WITH TO YOUR PROFILE");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 480, 50));

        jButton2.setBackground(new java.awt.Color(204, 255, 255));
        jButton2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton2.setText("Upload");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 320, -1, -1));

        jButton3.setBackground(new java.awt.Color(204, 255, 255));
        jButton3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton3.setText("Upload");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 320, -1, -1));

        jButton4.setBackground(new java.awt.Color(204, 255, 255));
        jButton4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton4.setText("Upload");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 320, -1, -1));

        jButton5.setBackground(new java.awt.Color(204, 255, 255));
        jButton5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton5.setText("Upload");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 520, -1, -1));

        jButton6.setBackground(new java.awt.Color(204, 255, 255));
        jButton6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton6.setText("Upload");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 530, -1, -1));

        jButton7.setBackground(new java.awt.Color(204, 255, 255));
        jButton7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton7.setText("Upload");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 530, -1, -1));

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        getContentPane().add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 570, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photographyportfolio/photoport (1).png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 600));

        usern.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        usern.setText("Ayush");
        getContentPane().add(usern, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 30, -1, -1));

        clientusername.setText("jLabel4");
        getContentPane().add(clientusername, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 20, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
Mainpage MainpageFrame = null;
        try {
            MainpageFrame = new Mainpage();
        } catch (SQLException ex) {
            Logger.getLogger(adminphoto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(adminphoto.class.getName()).log(Level.SEVERE, null, ex);
        }
        MainpageFrame.setVisible(true);
        MainpageFrame.pack();
        MainpageFrame.setLocationRelativeTo(MainpageFrame);
        this.dispose();         // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
admininfo admininfoFrame = null;
        try {
            admininfoFrame = new admininfo();
        } catch (SQLException ex) {
            Logger.getLogger(adminphoto.class.getName()).log(Level.SEVERE, null, ex);
        }
        admininfoFrame.jLabel2.setText(usern.getText());
        admininfoFrame.setVisible(true);
        admininfoFrame.pack();
        admininfoFrame.setLocationRelativeTo(admininfoFrame);
        this.dispose();          // TODO add your handling code here:
    }//GEN-LAST:event_button1ActionPerformed

    private void updateUserGallery(String username, byte[] image1, byte[] image2, byte[] image3, byte[] image4, byte[] image5, byte[] image6) {
    try {
        Connection conn = java.sql.DriverManager.getConnection("jdbc:mysql://localhost:3306/portfolio", "root", "root");
        String updateQuery = "UPDATE user_gallary SET image1=?, image2=?, image3=?, image4=?, image5=?, image6=? WHERE username=?";
        PreparedStatement pstUpdate = conn.prepareStatement(updateQuery);
        pstUpdate.setBytes(1, image1);
        pstUpdate.setBytes(2, image2);
        pstUpdate.setBytes(3, image3);
        pstUpdate.setBytes(4, image4);
        pstUpdate.setBytes(5, image5);
        pstUpdate.setBytes(6, image6);
        pstUpdate.setString(7, username);
        pstUpdate.executeUpdate();
        conn.close();
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error updating user gallery: " + e.getMessage());
    }
}
    
    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        String username = usern.getText(); // Assuming username is coming from jTextField1
        
        try {
            
            Connection conn = java.sql.DriverManager.getConnection("jdbc:mysql://localhost:3306/portfolio", "root", "root");
            
            String checkQuery ="Select * from user_gallary where username=?";
            PreparedStatement pstcheck = conn.prepareStatement(checkQuery);
            pstcheck.setString(1,username);
            java.sql.ResultSet rs = pstcheck.executeQuery();
            System.out.println(username);
            if(!rs.next()){
                if (pinsertimage != null && pinsertimage1 != null && pinsertimage2 != null && pinsertimage3 != null && pinsertimage4 != null && pinsertimage5 != null  ){
            String query = "INSERT INTO user_gallary (username, image1, image2, image3,image4,image5,image6) VALUES (?, ?, ?, ?, ?, ?, ?)";
            pst = conn.prepareStatement(query);
            pst.setString(1, username);
            pst.setBytes(2, pinsertimage);
            pst.setBytes(3, pinsertimage1);
            pst.setBytes(4, pinsertimage2);
            pst.setBytes(5, pinsertimage3);
            pst.setBytes(6, pinsertimage4);
            pst.setBytes(7, pinsertimage5);
            pst.executeUpdate();
            conn.close();
            JOptionPane.showMessageDialog(this, "Update successful");
             admincontact admincontactFrame = new admincontact(username);
        admincontactFrame.username.setText(usern.getText());
        admincontactFrame.setVisible(true);
        admincontactFrame.pack();
        admincontactFrame.setLocationRelativeTo(admincontactFrame);
        this.dispose();
            }else{
             JOptionPane.showMessageDialog(this, "Image should not be empty");
            }
                }else{
        JOptionPane.showMessageDialog(this, "User already Exists redirecting to next page");
         admincontact admincontactFrame = new admincontact(username);
        admincontactFrame.username.setText(usern.getText());
        admincontactFrame.setVisible(true);
        admincontactFrame.pack();
        admincontactFrame.setLocationRelativeTo(admincontactFrame);
        this.dispose();
        }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
       
        
       
        // TODO add your handling code here:
    }//GEN-LAST:event_button2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        JFileChooser fchoser = new JFileChooser();
        fchoser.showOpenDialog(null);
        File f = fchoser.getSelectedFile();
        String fname = f.getAbsolutePath();
        ImageIcon micon = new ImageIcon(fname);
        try {
            File image = new File(fname);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];
            int readnum;
            while ((readnum = fis.read(buf)) != -1) {
                baos.write(buf, 0, readnum);
            }
             pinsertimage = baos.toByteArray();
            img1.setIcon(new ImageIcon(fname)); // Set the image on the label
        } catch (Exception e) {
            e.printStackTrace();
        }  
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        JFileChooser fchoser = new JFileChooser();
        fchoser.showOpenDialog(null);
        File f = fchoser.getSelectedFile();
        String fname1 = f.getAbsolutePath();
        ImageIcon micon = new ImageIcon(fname1);
        try {
            File image = new File(fname1);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];
            int readnum;
            while ((readnum = fis.read(buf)) != -1) {
                baos.write(buf, 0, readnum);
            }
            pinsertimage1 = baos.toByteArray();
            img2.setIcon(new ImageIcon(fname1)); // Set the image on the label
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        JFileChooser fchoser = new JFileChooser();
        fchoser.showOpenDialog(null);
        File f = fchoser.getSelectedFile();
        String fname2 = f.getAbsolutePath();
        ImageIcon micon = new ImageIcon(fname2);
        try {
            File image = new File(fname2);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];
            int readnum;
            while ((readnum = fis.read(buf)) != -1) {
                baos.write(buf, 0, readnum);
            }
            pinsertimage2 = baos.toByteArray();
            img3.setIcon(new ImageIcon(fname2)); // Set the image on the label
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        JFileChooser fchoser = new JFileChooser();
        fchoser.showOpenDialog(null);
        File f = fchoser.getSelectedFile();
        String fname3 = f.getAbsolutePath();
        ImageIcon micon = new ImageIcon(fname3);
        try {
            File image = new File(fname3);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];
            int readnum;
            while ((readnum = fis.read(buf)) != -1) {
                baos.write(buf, 0, readnum);
            }
            pinsertimage3 = baos.toByteArray();
            img4.setIcon(new ImageIcon(fname3)); // Set the image on the label
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        JFileChooser fchoser = new JFileChooser();
        fchoser.showOpenDialog(null);
        File f = fchoser.getSelectedFile();
        String fname4 = f.getAbsolutePath();
        ImageIcon micon = new ImageIcon(fname4);
        try {
            File image = new File(fname4);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];
            int readnum;
            while ((readnum = fis.read(buf)) != -1) {
                baos.write(buf, 0, readnum);
            }
           pinsertimage4 = baos.toByteArray();
            img5.setIcon(new ImageIcon(fname4)); // Set the image on the label
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        JFileChooser fchoser = new JFileChooser();
        fchoser.showOpenDialog(null);
        File f = fchoser.getSelectedFile();
        String fname5 = f.getAbsolutePath();
        ImageIcon micon = new ImageIcon(fname5);
        try {
            File image = new File(fname5);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];
            int readnum;
            while ((readnum = fis.read(buf)) != -1) {
                baos.write(buf, 0, readnum);
            }
            pinsertimage5 = baos.toByteArray();
            img6.setIcon(new ImageIcon(fname5)); // Set the image on the label
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        String username = usern.getText();
    if (username != null) {
        if (pinsertimage != null && pinsertimage1 != null && pinsertimage2 != null &&
            pinsertimage3 != null && pinsertimage4 != null && pinsertimage5 != null) {
            updateUserGallery(username, pinsertimage, pinsertimage1, pinsertimage2, pinsertimage3, pinsertimage4, pinsertimage5);
            JOptionPane.showMessageDialog(this, "Gallery images updated successfully");
        } else {
            JOptionPane.showMessageDialog(this, "Image should not be empty");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Username not found.");
    }
        
    }//GEN-LAST:event_updateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminphoto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminphoto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminphoto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminphoto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminphoto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button button1;
    private java.awt.Button button2;
    public javax.swing.JLabel clientusername;
    private javax.swing.JLabel img1;
    private javax.swing.JLabel img2;
    private javax.swing.JLabel img3;
    private javax.swing.JLabel img4;
    private javax.swing.JLabel img5;
    private javax.swing.JLabel img6;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JButton update;
    public javax.swing.JLabel usern;
    // End of variables declaration//GEN-END:variables
}
