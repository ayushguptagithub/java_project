/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package photographyportfolio;

import java.awt.Component;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author shigvan
 */
public class adminwork extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public adminwork() {
        initComponents();
        
        
        try {
            
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/portfolio", "root", "root");
            String sql = "Select * from images";
           
            PreparedStatement preparedStatement = conn.prepareStatement(sql);

            ResultSet rs = preparedStatement.executeQuery();
            DefaultTableModel tbModel = (DefaultTableModel) jTable1.getModel();
            tbModel.setRowCount(0); // Clear existing data

            while (rs.next()) {
                String username = rs.getString("username");
                String name = rs.getString("fname");
                String email = rs.getString("details");
                byte[] imageBytes = rs.getBytes("image");
                String query = rs.getString("category");

                ImageIcon icon = new ImageIcon(imageBytes);
                Object[] rowData = {username,name, email, icon, query}; // Use the ImageIcon
                tbModel.addRow(rowData);
            }
            } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, e);
        }
        
        
        // Set the custom renderer for the image column (replace 2 with the actual column index)
        jTable1.getColumnModel().getColumn(3).setCellRenderer(new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                if (value instanceof ImageIcon) {
                    JLabel label = new JLabel((ImageIcon) value);
                    label.setHorizontalAlignment(JLabel.CENTER);
                    return label;
                } else {
                    return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                }
            }
        });
        
        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = jTable1.getSelectedRow();
                    if (selectedRow >= 0) {
                        Object username = jTable1.getValueAt(selectedRow, 0);
                        ShowReviewRow(username.toString());
                    }
                }
            }
        });
        
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        clientusername = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setBackground(new java.awt.Color(255, 51, 51));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setText("DELETE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 560, 90, 30));

        jButton1.setText("Logout");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 20, 70, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Name", "Details", "Image", "Category"
            }
        ));
        jTable1.setRowHeight(150);
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 460, 420));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Username", "Review", "Ratings"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 130, 310, 420));

        jButton3.setText("Next");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 20, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photographyportfolio/bg.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 0, 160, 60));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 204));
        jLabel4.setText("Reviews");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 80, 150, 40));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 204));
        jLabel3.setText("Photographers");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 250, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photographyportfolio/photoport (5).png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 590));

        clientusername.setText("jLabel4");
        getContentPane().add(clientusername, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 20, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteSelectedRow() {
    int selectedRow = jTable1.getSelectedRow();
    if (selectedRow == -1) {
      
        return;
    }

    
    Object id = jTable1.getValueAt(selectedRow, 0);
    
        String from = "checkin12390@gmail.com";
        String password = "dtvtxofktnxijekn";

        // Configure the email server properties
        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");

        // Create a Session with authentication
        Session session = Session.getDefaultInstance(props, new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(from, password);
            }
        });
   
    try {
        // Construct a message for the user
        String messageContent = "Your profile is being deleted by the admin.";
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/portfolio", "root", "root");
        String sql = "DELETE FROM images WHERE username = ?";
        PreparedStatement preparedStatement = conn.prepareStatement(sql);

        // Set the value of the unique identifier in the prepared statement
        preparedStatement.setObject(1, id);

        int deletedRows = preparedStatement.executeUpdate();
        String insertMessageSql = "INSERT INTO messages (username, message, time, is_read) VALUES (?, ?, NOW(), 0)";
        PreparedStatement insertMessageStatement = conn.prepareStatement(insertMessageSql);

        insertMessageStatement.setObject(1, id); // Recipient username
        
        insertMessageStatement.setString(2, messageContent);

        int insertedRows = insertMessageStatement.executeUpdate();

        if (deletedRows > 0 && insertedRows > 0) {
            // Successfully deleted the row from the database
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.removeRow(selectedRow);
            javax.swing.JOptionPane.showMessageDialog(this, "Message sent");
            
        } else {
            // Handle the case where the row was not deleted (e.g., no matching row found)
            javax.swing.JOptionPane.showMessageDialog(this, "Row not deleted.");
        }
    } catch (SQLException e) {
        e.printStackTrace();
        // Handle the exception appropriately.
    }
    try {
        
         String messageContent = "Your profile is being deleted by the admin.";
         String subject = "PortFolio";
         String userEmail = null;
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/portfolio", "root", "root");
        String sql = "Select email FROM users WHERE username = ?";
        PreparedStatement preparedStatement = conn.prepareStatement(sql);

        // Set the value of the unique identifier in the prepared statement
        preparedStatement.setObject(1, id);

        ResultSet rs = preparedStatement.executeQuery();

    if (rs.next()) {
        userEmail = rs.getString("email");
        // Use the userEmail as needed
    } else {
        // Handle the case where no matching row is found
        JOptionPane.showMessageDialog(this, "No email found for the selected user.");
    }
        
            // Create a message
            Message emailMessage = new MimeMessage(session);
            emailMessage.setFrom(new InternetAddress(from));
            emailMessage.setRecipient(Message.RecipientType.TO, new InternetAddress(userEmail));
            emailMessage.setSubject(subject);
            emailMessage.setText(messageContent);

            // Send the email
            Transport.send(emailMessage);
            JOptionPane.showMessageDialog(this, "Email sent successfully!");
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Email could not be sent. Check your credentials and try again.");
        }
   
}
    
   private void ShowReviewRow(String selectedUsername) {
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/portfolio", "root", "root");
            String sql = "Select * from reviews WHERE username = ?";
            PreparedStatement preparedStatement = conn.prepareStatement(sql);
            preparedStatement.setString(1, selectedUsername); // Set the selected username as a parameter
            ResultSet rs = preparedStatement.executeQuery();
            
            DefaultTableModel tbModel = (DefaultTableModel) jTable2.getModel();
            tbModel.setRowCount(0); // Clear existing data

            while (rs.next()) {
                String username = rs.getString("username");
                String review = rs.getString("review");
                int StarRating = rs.getInt("star_rating");
                String client = rs.getString("clientusername");
                Object[] rowData = {client, review,StarRating};
                tbModel.addRow(rowData);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }

    // ... Rest of your code ...


    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Mainpage MainpageFrame = null;
        try {
            MainpageFrame = new Mainpage();
        } catch (SQLException ex) {
            Logger.getLogger(adminwork.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(adminwork.class.getName()).log(Level.SEVERE, null, ex);
        }
        MainpageFrame.setVisible(true);
        MainpageFrame.pack();
        MainpageFrame.setLocationRelativeTo(MainpageFrame);
        this.dispose();         // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        deleteSelectedRow();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        AdminMessageCheck check = new AdminMessageCheck();
        check.setVisible(true);
        check.pack();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminwork.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminwork.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminwork.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminwork.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminwork().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel clientusername;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
